<template>
  <view class="cat-item-ctner">

    <view class="order-status-order">
        <text>米兔生活馆1</text>
        <image src='../../images/unfold.png'></image>
        <text>交易成功</text>
    </view>

    <view class="sure-same-outer goods-outer" wx:for="{{item.orderDetailList}}" wx:key="index" wx:for-item="subItem">
        <view class='cat-m'>
            <image src='{{subItem.goodsIco}}' />
        </view>
        <view class="cat-m-t">
            <view class='goods-name'>
                <text>{{subItem.goodsName}}</text>
                <text>￥{{subItem.price}}</text>
            </view>
            <view class='goods-des'>
                <text>颜色：{{subItem.colorName}}</text>
                <text>x{{subItem.goodsNumber}}</text>
            </view>
        </view>
    </view>
    
<!-- 
    <view class="sub-same s-num">
        <text>购买数据</text>
        <text>{{item.goodsNumber}}</text>
    </view> -->

    <view class="sub-same s-type">
        <text>购买方式</text>
        <text>免运费(快递发货)</text>
    </view>

    <view class="sub-same s-word">
        <text>买家留言：</text>
        <input bindinput="bindReplaceInput" maxlength='200' class='icx-input' placeholder-class='icx-placeholder' placeholder="点击给商家留言" />
    </view>

    <view class="order-num-outer">
        <text>共{{item.goodsNumber}}件 合计:</text>
        <text>￥{{item.orderAmount}}</text>
    </view>
    
  </view>
</template>

<script>
import wepy from 'wepy';
import AddCom from '../AddCom/index'
export default class OrderGoodCom extends wepy.component {
  props = {
      item: {
          type: Object,
          default: {},
          twoWay: true
      },
      current: {
          type: Number,
          default: 0
      }
  }
  components = {
      AddCom: AddCom
  }
  data = {
      num: 2
  }
  methods = {
      numAdd() {
          console.log('numAdd');
      },
      numReduce() {
          console.log('numReduce');
      },
      bindReplaceInput(e) {
          console.log(e.detail.value, this.current);
          this.$emit('order-detail-input', e.detail.value, this.current)
        //   this.item.remarks = e.detail.value
          this.$apply()
      }
  }
  watch = {
      item(newVal, oldVal) {

      }
  }
  onLoad() {
      console.log('item', this.item);
  }
}
</script>

<style lang="scss" scoped>
@import './index.scss'
</style>
