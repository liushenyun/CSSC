<template>
  <view class="cat-item-ctner">
    <view class='cat-l' @tap="toggleCheckA({{item.check}})">
        <image wx:if="{{item.check}}" src='../../images/selected.png' />
        <image wx:else src='../../images/uncheck.png' />
    </view>
    <view class='cat-m'>
        <image src='{{item.goodsIco}}' />
    </view>
    <view class="cat-m-t">
        <view class='goods-name'>{{item.goodsName}}</view>
        <view class='goods-des'>{{current}}颜色：{{item.colorName}}</view>
        <view class='goods-num'>仅剩{{item.leavingsQuantity}}件</view>
        <view class='goods-pri'>
            <text>￥{{item.price}}</text>
            <!-- <text>￥358</text> -->
        </view>
    </view>
    <view class='cat-r'>
        <!-- <AddCom :num="item.quantity"></AddCom> -->
        <view hover-class='icx-click-hove' @tap='deleteA' class="del-btn">删除</view>
        <view class='_num'>
            <view class='num-l' @tap='numReduce'>-</view>
            <view class='num-m'>{{item.quantity}}</view>
            <view class='num-r' @tap='numAdd'>+</view>
        </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import AddCom from '../AddCom/index'
export default class CatItem extends wepy.component {
  props = {
      item: {
          type: Object,
          default: {}
      },
      current: {
          type: Number,
          default: 0
      }
  }
  data = {
      currentNum: 0
  }
  components = {
      AddCom: AddCom
  }
  methods = {
      numAdd() {
          this.currentNum = this.item.quantity + 1;
        //   this.$emit('num-change-event', this.current, this.currentNum)
          this.$emit('num-change-event', this.current, 'add')
          
      },
      numReduce() {
          if (this.currentNum < 2) return
        //   this.currentNum = this.item.quantity - 1;
        //   this.$emit('num-change-event', this.current, this.currentNum)
          this.$emit('num-change-event', this.current, 'sub')
      },
      toggleCheckA(check) {
          this.$emit('calt-item-check', this.current, !check)
      },
      deleteA() {
        this.$emit('calt-item-del', this.current)
      }
  }
  watch = {
      item(newVal, oldVal) {
          this.currentNum = newVal.quantity
          this.$apply()
      }
  }
  onLoad() {
  }
}
</script>

<style lang="scss" scoped>
@import './index.scss'
</style>
