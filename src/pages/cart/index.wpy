
<template>
  <view class="cart-ctner container-same">
    <wxs src="../../utils/filter.wxs" module="tools"></wxs>
      <view class="cart-goods-outer">
        <view class="cart-goods-has">
          <repeat for="{{rowsArr}}" key="{{item.id}}" index="index" item="item">
            <CatItem class='cat-itme-wrap' :item="item" :current="index"></CatItem>
          </repeat>
        </view>
        <view class="cart-goods-no" wx:if='{{rowsArr.length < 1}}'>
          <image src='../../images/shopping.png'></image>
          <view>空空如也 马上添加</view>
        </view>
      </view>
      

      <view class="cart-like" wx:if="{{pageLikeList.length > 0}}">
        <view class="cart-like-title">·猜您喜欢·</view>
        <view class='cat-container'>
          <view @tap="toGoodsDetail({{item}})" class="cat-like-item" wx:for="{{pageLikeList}}" wx:key="index">
            <image src="{{item.goodsIco}}"></image>
          </view>
        </view>
      </view>

      <view class='cat-bottom'>
        <view class='check-all' @tap='checkAll'>
          <image wx:if= "{{isAllCkeck}}" src='../../images/selected.png' />
          <image wx:else= "{{isAllCkeck}}" src='../../images/uncheck.png' />
          <text>全选</text>
        </view>
        <view class='price-total'>
          <text>合计：</text>
          <text>￥{{totalMoney}}</text>
        </view>
        <view class='pay-btn' @tap='toSureOrderA'>结算({{createData.length}})</view>
      </view>
    
  </view>
</template>

<script>
import wepy from 'wepy';
import Auth from '../../common/js/authProcess.js';
import {
  apiCartFindPageF,
  apiChangeQuantityF,
  apiCartDeleteF
} from '../../services/cart';
import {
  apiCreateOrderF
} from '../../services/mine'

import { apiGoodsLikePageF } from '../../services/index/index'

import { BLOOD_TIP_READED, TIP_GLYCEMIC_TEXT } from '@/common/js/config';
import miniPro from '@/utils/wepy-pro.js';
import { showAlertTips } from '@/utils/feature.js';
import CatItem from '@/components/catItem/index';

export default class Index extends wepy.page {
  config = {
    // navigationBarBackgroundColor: '#09103b',
    // navigationBarTextStyle: '#FFF'
    navigationBarTitleText: '购物车'
  };
  components = {
    CatItem: CatItem
  };

  mixins = [];

  data = {
    pageNum: 0,
    rowsArr: [],
    changeQuantity: {
      id: '',
      type: '',
      current: -1
    },
    isAllCkeck: false,
    totalMoney: 0,
    createData: [],
    delGoosId: '',
    pageParamsLike: {
      page: 0,
      limit: 20
    },
    pageLikeList: []
  };

  computed = {};

  methods = {
    toMsgA() {
       wepy.navigateTo({ url: '/pages/packageIndex/message/index' });
    },
    bindReplaceInput(e) {
    },
    toDeviceA() {
      wepy.navigateTo({ url: '/pages/packageIndex/device/index' });
    },
    toScanAddDeviceA() {
      // 允许从相机和相册扫码
      wx.scanCode({
        success(res) {
        }
      })
    },
    toNoAddDeviceA() {
      wepy.navigateTo({ url: '/pages/packageIndex/addDevice/index' });
    },
    toSureOrderA() {
       this.apiCreateOrderA(this.apiCreateOrderA.bind(this))
    },
    checkAll() {
      this.rowsArr.forEach(val => val.check = !this.isAllCkeck)
    },
    toGoodsDetail(item) {
      wepy.navigateTo({ url: `/pages/packageIndex/goodsDetail/index?goodsId=${item.id}` })
    }
  };

  apiCreateOrderA(fun) {
    apiCreateOrderF(this.createData, fun).then(msg => {
      let _id = msg.id
      wepy.navigateTo({ url: `/pages/packageMine/sureOrder/index?orderId=${_id}` });
    }).catch(err => {

    })
  }
  apiCartFindPageA(fun) {
    let _pageNum = this.pageNum
    apiCartFindPageF({
      page: _pageNum
    }, fun).then(msg => {
      let { rows } = msg
      this.rowsArr = rows.map((val) => {
        val.check = false
        return val
      })
      this.$apply()
    }).catch(err => {

    })
  }
  apiChangeQuantityA(fun) {
    apiChangeQuantityF({
      id: this.changeQuantity.id,
      type: this.changeQuantity.type
    }, fun).then(msg => {
      this.rowsArr[this.changeQuantity.current].quantity = msg.quantity
      this.$apply()
    }).catch(err => {

    })
  }
  apiCartDeleteA(fun) {
    apiCartDeleteF(this.delGoosId, fun).then(msg => {
      this.rowsArr.splice(this.changeQuantity.current, 1)
      this.$apply()
    }).catch(err => {

    })
  }

  apiGoodsLikePageFA(fun) {
    apiGoodsLikePageF({
      page: this.pageParamsLike.page,
      limit: this.pageParamsLike.limit
    }, fun).then((result) => {
      let { rows } = result
      this.pageLikeList = rows
      this.$apply();
    }).catch((err) => {
      
    });
  }

  watch = {
    rowsArr (newValue) {
          let _newValue = newValue
          this.isAllCkeck = _newValue.every(val => {
            return val.check
          })
          let _totalMoney = 0;
          let _createData = []
          _newValue.forEach((val) => {
            if (val.check) {
              _totalMoney = (_totalMoney * 1000 + val.price * val.quantity*1000)/1000
              _createData.push({
                cartId: val.id,
                goodsId: val.goodsId,
                specificationId: val.specificationId,
                colorId: val.colorId,
                goodsNumber : val.quantity
              })
            }
          });
          this.totalMoney = _totalMoney
          this.createData = _createData
    }
  }
  events = {
    'calt-item-check': (index, check) => {
      this.rowsArr[index].check = check
      this.$apply()
    },
    'num-change-event': (index, type) => {
      this.changeQuantity.id = this.rowsArr[index].id
      this.changeQuantity.type = type
      this.changeQuantity.current = index
      this.apiChangeQuantityA(this.apiChangeQuantityA.bind(this))
      this.$apply()
    },
    'calt-item-del': (index) => {
      let _self = this
      miniPro.showConfirm({
        title: '提示',
        content: '确实删除次商品？',
        callback(flag) {
          if (!flag) return
          _self.changeQuantity.current = index
          _self.delGoosId = _self.rowsArr[index].id
          _self.apiCartDeleteA(_self.apiCartDeleteA.bind(_self))
        }
      })
      
    }
  };

  async onLoad() {
    this.apiCartFindPageA(this.apiCartFindPageA.bind(this))
    this.apiGoodsLikePageFA(this.apiGoodsLikePageFA.bind(this))
    // apiGoodsLikePageFA
    this.$apply();
  }
  onUnload() {}
  onHide() {}
  async onShow() {}
  getSystemInfo() {
    let res = wepy.getSystemInfoSync();
    let fitRatio = res.windowWidth / 750;
    this.$apply();
  }
}
</script>
<style lang="scss">
@import './index.scss';
</style>
