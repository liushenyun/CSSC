<template>
  <view class='address-list-ctner'>
      <view class="addl-new" @tap="toAddressA">
        <image src='../../../images/location_a.png'></image>
        <text>新增收货地址</text>
        <image src='../../../images/unfold.png'></image>
      </view>

      <view class="addl-list-outer">

        <view class="addl-list-item" wx:for="{{addressList}}" wx:key="index" @tap="checked({{index}})">
          <image wx:if="{{item.isChecked}}" class="addl-img-a" src='../../../images/selected.png'></image>
          <image wx:else class="addl-img-a" src='../../../images/uncheck.png'></image>
          <view class="addl-list-word">
            <view> <text>{{item.name}}</text> <text>{{ item.phone}}</text> </view>
            <view>收货地址：{{item.province}}{{item.city}}{{item.district}}{{item.address}} </view>
          </view>
          <view class="addl-edit"  @tap.stop="toAddressEditA({{item.id}})">
              <image class="addl-img-b" src='../../../images/edit.png'></image>
          </view>
          
        </view>

      </view>

  </view>
</template>

<script>
import wepy from 'wepy'
import { apiAddressFindPageF } from '../../../services/mine/index'
export default class AddressList extends wepy.page {
  config = {
    // navigationBarBackgroundColor: '#09103b',
    // navigationBarTextStyle: '#FFF',
    navigationBarTitleText: '管理收货地址'
  };
  components = {
  };
  data = {
    addressList: []
  };
  methods = {
    checked(index) {
      let _list = this.addressList
      this.addressList.forEach((val, i) => {
        if (index == i) {
          val.isChecked = true
        } else {
          val.isChecked = false
        }
      })
      this.$apply()
      
    },
    toAddressEditA(id) {
      wepy.navigateTo({ url: `/pages/packageMine/addressEdit/index?id=${id}` });
    },
    toAddressA() {
      wepy.navigateTo({ url: '/pages/packageMine/addressEdit/index' });
    }
  }
  apiAddressFindPageA(fun) {
    apiAddressFindPageF({
      page: 0,
      limit: 1000
    }, fun).then((result) => {
      let { rows } = result
      this.addressList = rows.map(val => {
        val.isChecked = val.def == 1 ? true : false
        return val
      })
      this.$apply()
    }).catch((err) => {
      
    });
  }
  onLoad() {
    this.apiAddressFindPageA(this.apiAddressFindPageA.bind(this))
  }
}
</script>
<style lang="scss" scoped>
@import './index'
</style>

