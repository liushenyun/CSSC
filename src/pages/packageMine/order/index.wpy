<template>
  <view class='order-ctner'>
      <view class="order-top-outer">
        <view class="ot-same ot-a {{currentIndex == index ? 'active':''}}" wx:for='{{topArr}}' wx:key="index" @tap="changeCurA({{index}})">{{item}}</view>
      </view>
      <view class="order-top-con">
        <swiper
          indicator-dots="{{indicatorDots}}"
          autoplay="{{autoplay}}"
          duration="{{duration}}"
          current="{{currentIndex}}"
          bindchange="intervalChange"
        >
          <block wx:for="{{topArr}}" wx:key='index'>
            <swiper-item>
              <scroll-view scroll-y="true" style="height: 100%;" @scrolltolower="loadMore">
                <view class="swiper-div-same">
                  <!-- <repeat for="{{pageList}}" wx:key="index" wx:for-index="subIndex" wx:for-item="subItem"> -->
                  <repeat for="{{pageList}}" key='subIndex' index="subIndex" item="subItem">
                    <view class="order-com" @tap="toOrderInfo({{subItem}})">
                      <OrderCom :item="subItem" :OrderComIndex="subIndex"></OrderCom>
                    </view>
                  </repeat>
                  <NoTip wx:if="{{pageList.length == 0}}"></NoTip>
                </view>
              </scroll-view>

            </swiper-item>
          </block>
        </swiper>
      </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import '../../../common/js/authProcess.js'
import NoTip from '@/components/OrderNoDataTip/index'
import OrderCom from '@/components/OrderGoodCom/index'
import miniPro from '@/utils/wepy-pro.js'
import {
  apiOrderFindPageF,
  apiCancelOrderF, // 取消订单
  apiConfirmOrderF, // 确认收货
  apiRefundF // 退款
} from '../../../services/mine/index'
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: '我的订单'
  };
  components = {
    NoTip: NoTip,
    OrderCom: OrderCom
  };
  data = {
    topArr: ['全部', '待付款', '待发货', '待收货', '待评价'],
    currentIndex: 0,
    indicatorDots: false,
    autoplay: false,
    duration: 100,
    orderStatusObj: [0, 1, 2, 4, 5], // 状态（0：全部订单 1：待支付 2：待发货 4：待收货 5：待评论）
    pageList: [],
    cancelOrderId: '',
    orderActionId: '',
    confirmOrderId: '',
    btnClickCurrenIndex: -1,
    pageParams: {
      page: 0,
      limit: 10,
      orderStatus: 0,
      hasMore:false
    }
  };
  events = {
    'order-btn-event': (item, index) => {
      console.log(item);
      let groupPurchaseActivityId = item.groupPurchaseActivityId;
      this.btnClickCurrenIndex = index
      let _action = item.action
      if (_action == "1b") { // 付款
        if(groupPurchaseActivityId){
          wepy.navigateTo({ url: `/pages/groupBuy/ConfirmOrder/index?orderId=${item.parentId}` });
        }else{
          wepy.navigateTo({ url: `/pages/packageMine/sureOrder/index?orderId=${item.parentId}` });
        }
      } else if (_action == "1a") { // 取消订单
        this.cancelOrderId = item.id
        this.apiCancelOrderFA(this.apiCancelOrderFA.bind(this))
      } else if (_action == "2a") { // 退款
        this.orderActionId = item.id
        this.apiRefundFA(this.apiRefundFA.bind(this))
      } else if (_action == '5b') {
        // wepy.navigateTo({ url: `/pages/packageMine/sureOrder/index?orderId=${item.parentId}` });
      } else if (_action == '4c') {
        this.confirmOrderId = item.id
        this.apiConfirmOrderFA(this.apiConfirmOrderFA.bind(this))
      } else if (_action == '4b' || _action == '2b') { // 查看物流
        wepy.navigateTo({ url: `/pages/packageMine/logisticsInfo/index?id=${item.id}` });
      }
    }
  }
  methods = {
    toFilterA() {
      wepy.navigateTo({ url: '/pages/packageIndex/filter/index' });
    },
    intervalChange(e) {
      this.currentIndex = e.detail.current
      this.pageParams.orderStatus = this.orderStatusObj[e.detail.current]
      this.pageParams.page = 0
      this.pageParams.hasMore = false
      this.pageList = []
      this.apiOrderFindPageFA(this.apiOrderFindPageFA.bind(this))
    },
    changeCurA(i) {
      this.currentIndex = i;
    },
    loadMore() { // 加载更多
      if (!this.pageParams.hasMore) return
      this.pageParams.page += 1
      this.apiOrderFindPageFA(this.apiOrderFindPageFA.bind(this))
    },
    toOrderInfo (e){
      console.log(e);
      if (e.orderStatus == 3 || e.orderStatus == 2){
        let groupPurchaseActivityId = e.groupPurchaseActivityId;
        if (groupPurchaseActivityId){
          wepy.navigateTo({ url: `/pages/groupBuy/OrderInfo/index?orderChildId=${e.id}` });
        }
      }
    }
  };
  apiOrderFindPageFA(fun) {
    apiOrderFindPageF({
      page: this.pageParams.page,
      limit:  this.pageParams.limit,
      orderStatus:  this.pageParams.orderStatus
    }, fun).then((result) => {
      let { rows, last, pageNumber } = result
      this.pageParams.page = pageNumber
      this.pageParams.hasMore = !last
      this.pageList = this.pageList.concat(rows)
      this.$apply()
    }).catch((err) => {

    });
  }

  apiRefundFA(fun) {
    apiRefundF(this.orderActionId, fun).then((result) => {
      miniPro.showToast('退款成功')
      setTimeout(() => {
        this.pageList[this.btnClickCurrenIndex].orderStatus = 3
        this.$apply()
      }, 1000);
    }).catch((err) => {

    });
  }

  apiCancelOrderFA(fun) {
    apiCancelOrderF(this.cancelOrderId, fun).then((result) => {
    }).catch((err) => {

    });
  }

  apiConfirmOrderFA(fun) {
    apiConfirmOrderF(this.confirmOrderId, fun).then((result) => {
      miniPro.showToast('确认成功')
      setTimeout(() => {
        this.pageList.splice(this.btnClickCurrenIndex, 1)
        this.$apply()
      }, 1000)
    }).catch((err) => {

    });
  }


  onLoad(option) {
    this.currentIndex = option.current || 0
    this.pageParams.orderStatus = this.orderStatusObj[this.currentIndex]
    this.apiOrderFindPageFA(this.apiOrderFindPageFA.bind(this))
  }
}
</script>
<style lang="scss" scoped>
@import './index'
</style>

